From abad339fc502c5d1116664bc659d666f80634b47 Mon Sep 17 00:00:00 2001
From: Stefan Hacker <dd0t@users.sourceforge.net>
Date: Sun, 27 Apr 2014 00:37:25 +0200
Bug-Debian: https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=787384
Bug-Mumble: https://github.com/mumble-voip/mumble/issues/1178
Subject: [PATCH] Remove flawed MX host existence check for cert wizard (#1178)
Last-Updated: 2015-09-16

The certificate wizard tried to verify the host of email addresses
input by users by resolving their A record. This is flawed as
a host isn't required to have an A record for receiving mail. The
correct way would be to check the MX record instead. This isn't
possible in Qt 4. As the feature is of dubious value anyways this
patch simply removes it. Now every email matching (.+)@(.+) is
accepted.
---
 src/mumble/Cert.cpp | 47 +++++++----------------------------------------
 src/mumble/Cert.h   |  3 ---
 2 files changed, 7 insertions(+), 43 deletions(-)

--- a/src/mumble/Cert.cpp
+++ b/src/mumble/Cert.cpp
@@ -128,9 +128,6 @@
 
 	setOption(QWizard::NoCancelButton, false);
 
-	bValidDomain = true;
-	bPendingDns = false;
-
 	qwpExport->setCommitPage(true);
 	qwpExport->setComplete(false);
 }
@@ -204,24 +201,14 @@
 
 bool CertWizard::validateCurrentPage() {
 	if (currentPage() == qwpNew) {
-		if (! bValidDomain) {
-			QRegExp ereg(QLatin1String("(.+)@(.+)"), Qt::CaseInsensitive, QRegExp::RegExp2);
-			if (ereg.exactMatch(qleEmail->text())) {
-				const QString &domain = ereg.cap(2);
-				if (! domain.isEmpty()) {
-					qlError->setText(tr("Resolving domain %1.").arg(domain));
-					bPendingDns = true;
-					iLookupId = QHostInfo::lookupHost(domain, this, SLOT(lookedUp(QHostInfo)));
-				} else
-					bValidDomain = true;
-			} else
-				qlError->setText(tr("Unable to validate email.<br />Enter a valid (or blank) email to continue."));
-			if (! bValidDomain) {
-				qwpNew->setComplete(false);
-				return false;
-			}
+		QRegExp ereg(QLatin1String("(^$)|((.+)@(.+))"), Qt::CaseInsensitive, QRegExp::RegExp2);
+		if (!ereg.exactMatch(qleEmail->text())) {
+			qlError->setText(tr("Unable to validate email.<br />Enter a valid (or blank) email to continue."));
+			qwpNew->setComplete(false);
+			return false;
 		} else {
 			kpNew = generateNewCert(qleName->text(), qleEmail->text());
+
 			if (! validateCert(kpNew)) {
 				qlError->setText(tr("There was an error generating your certificate.<br />Please try again."));
 				return false;
@@ -271,13 +258,7 @@
 	return QWizard::validateCurrentPage();
 }
 
-void CertWizard::on_qleEmail_textChanged(const QString &email) {
-	bValidDomain = email.isEmpty();
-	if (bPendingDns) {
-		qlError->setText(QString());
-		QHostInfo::abortHostLookup(iLookupId);
-		bPendingDns = false;
-	}
+void CertWizard::on_qleEmail_textChanged(const QString &) {
 	qwpNew->setComplete(true);
 }
 
@@ -367,20 +348,6 @@
 	QDesktopServices::openUrl(QUrl(url));
 }
 
-void CertWizard::lookedUp(QHostInfo info) {
-	bPendingDns = false;
-	if (info.error() == QHostInfo::NoError) {
-		bValidDomain = true;
-		qlError->setText(QString());
-		qwpNew->setComplete(true);
-		next();
-	} else {
-		bValidDomain = false;
-		qlError->setText(tr("Unable to resolve domain."));
-		qwpNew->setComplete(false);
-	}
-}
-
 static int add_ext(X509 * crt, int nid, char *value) {
 	X509_EXTENSION *ex;
 	X509V3_CTX ctx;
--- a/src/mumble/Cert.h
+++ b/src/mumble/Cert.h
@@ -61,8 +61,6 @@
 		Q_DISABLE_COPY(CertWizard)
 	protected:
 		Settings::KeyPair kpCurrent, kpNew;
-		bool bValidDomain, bPendingDns;
-		int iLookupId;
 	public:
 		CertWizard(QWidget *p = NULL);
 		int nextId() const;
@@ -80,7 +78,6 @@
 		void on_qleImportFile_textChanged(const QString &);
 		void on_qlePassword_textChanged(const QString &);
 		void on_qlIntroText_linkActivated(const QString &);
-		void lookedUp(QHostInfo);
 };
 
 #endif
