--- a/ice/__main__.py
+++ b/ice/__main__.py
@@ -2,6 +2,7 @@
 
 import sys
 import traceback
+import os
 
 try:
   from runners import command_line_runner
@@ -9,14 +10,9 @@ try:
   if __name__ == "__main__":
     runner = command_line_runner.CommandLineRunner()
     runner.run(sys.argv)
-    # Keeps the console from closing (until the user hits enter) so they can
-    # read any console output
-    print ""
-    print "Close the window, or hit enter to exit..."
-    raw_input()
 except Exception as e:
   stderr = sys.stderr
-  with open('error.log', 'w') as f:
+  with open(os.path.join(os.environ['HOME'],"ice-error.log"),'w') as f:
     sys.stderr = f
     traceback.print_exc()
     sys.stderr = stderr
@@ -24,4 +20,3 @@ except Exception as e:
   print ""
   print "An error has occurred! A copy of the crash report has been saved to 'error.log'."
   print "If this continues please submit an issue on our Github page (http://github.com/scottrice/Ice)"
-  raw_input()
--- a/ice/logs.py
+++ b/ice/logs.py
@@ -24,10 +24,14 @@ class IceLevelTagFilter(logging.Formatte
     record.leveltag = self._tag_for_level(record.levelno)
     return True
 
-def create_logger():
+class IceLogger():
+
+  ''' initialize our loggers '''
+
+  def __init__(self, verbose=False):
     # steam handler (only print info messages to terminal)
     ch = logging.StreamHandler()
-    ch.setLevel(logging.INFO)
+    ch.setLevel(logging.INFO if not verbose else logging.DEBUG)
     ch.addFilter(IceLevelTagFilter())
     ch.setFormatter(logging.Formatter('%(leveltag)s%(message)s'))
 
@@ -35,7 +39,7 @@ def create_logger():
     # - max file size of 1mb
     # - log file is stored in root ice folder and is named 'ice.log'
     fh = logging.handlers.RotatingFileHandler(
-        filename='ice.log',
+        filename='/tmp/ice-'+os.environ['USER']+'.log',
         maxBytes=1048576,
         backupCount=5)
     fh.setLevel(logging.DEBUG)
@@ -43,10 +47,13 @@ def create_logger():
         logging.Formatter('%(asctime)s [%(levelname)s][%(filename)s][%(funcName)s:%(lineno)s]: %(message)s'))
 
     # loggers
-    logger = logging.getLogger('Ice')
-    logger.setLevel(logging.DEBUG)
-    logger.addHandler(ch)
-    logger.addHandler(fh)
-    return logger
+    self.logger = logging.getLogger('Ice')
+    self.logger.setLevel(logging.DEBUG)
+    self.logger.addHandler(ch)
+    self.logger.addHandler(fh)
 
-logger = create_logger()
+    self.info = self.logger.info
+    self.debug = self.logger.debug
+    self.warning = self.logger.warning
+    self.error = self.logger.error
+    self.exception = self.logger.exception
