From: Simon McVittie <smcv@debian.org>
Date: Tue, 14 Jul 2015 11:19:39 +0100
Subject: File access methods: prevent overwriting DLLs (CVE-2011-3012)

This is a known feature regression: it prevents mod DLLs from being
unpacked from PK3 files (FS_CL_ExtractFromPakFile), making it
considerably harder to install mods that contain arbitrary native
code (such as those designed for retail RTCW). The opposite
change, re-introducing the vulnerability, was made in commit
<https://code.google.com/p/iortcw/source/detail?r=133> in order
to fix FS_CL_ExtractFromPakFile.

However, the feature that regresses here cannot be supported without
re-introducing Quake III engine vulnerability CVE-2011-3012, and
breaking some mods seems like a lesser evil than letting
auto-downloads execute arbitrary and potentially malicious native
code, either via a direct unpack of native code or via QVM code
being allowed to open and write a file with the platform's DLL
extension.

FS_CL_ExtractFromPakFile relies on the vulnerable behaviour and is
useless without it, so stub that out too.

Add the same checks in SP file-copying code, for completeness
(although in practice SP should never execute code not provided by
either the retail RTCW binaries, iortcw or a deliberately-installed
mod, because auto-downloading from a server is not applicable there).
---
 MP/code/qcommon/files.c | 12 ++++++++----
 SP/code/qcommon/files.c | 10 ++++++++++
 2 files changed, 18 insertions(+), 4 deletions(-)

diff --git a/MP/code/qcommon/files.c b/MP/code/qcommon/files.c
index 71cd350..1e37a2f 100644
--- a/MP/code/qcommon/files.c
+++ b/MP/code/qcommon/files.c
@@ -685,7 +685,9 @@ fileHandle_t FS_SV_FOpenFileWrite( const char *filename ) {
 		Com_Printf( "FS_SV_FOpenFileWrite: %s\n", ospath );
 	}
 
-//	FS_CheckFilenameIsMutable( ospath, __func__ );
+#ifndef I_WANT_CVE_2011_3012
+	FS_CheckFilenameIsMutable( ospath, __func__ );
+#endif
 
 	if( FS_CreatePath( ospath ) ) {
 		return 0;
@@ -904,7 +906,9 @@ fileHandle_t FS_FOpenFileWrite( const char *filename ) {
 		Com_Printf( "FS_FOpenFileWrite: %s\n", ospath );
 	}
 
-//	FS_CheckFilenameIsMutable( ospath, __func__ );
+#ifndef I_WANT_CVE_2011_3012
+	FS_CheckFilenameIsMutable( ospath, __func__ );
+#endif
 
 	if ( FS_CreatePath( ospath ) ) {
 		return 0;
@@ -1546,7 +1550,7 @@ int FS_FindVM(void **startSearch, char *found, int foundlen, const char *name, q
                                 }
 		        }
 
-#ifndef DEDICATED
+#if defined( I_WANT_CVE_2011_3012 ) && !defined( DEDICATED )
 			// extract the dlls from the mp_bin.pk3 so
 			// that they can be referenced
 			if (Q_stricmp(name, "qagame"))
@@ -1581,7 +1585,7 @@ int FS_FindVM(void **startSearch, char *found, int foundlen, const char *name, q
 
 // TTimo
 // relevant to client only
-#if !defined( DEDICATED )
+#if defined( I_WANT_CVE_2011_3012 ) && !defined( DEDICATED )
 /*
 ==================
 FS_CL_ExtractFromPakFile
diff --git a/SP/code/qcommon/files.c b/SP/code/qcommon/files.c
index 101c44d..6fa4a41 100644
--- a/SP/code/qcommon/files.c
+++ b/SP/code/qcommon/files.c
@@ -175,6 +175,8 @@ or configs will never get loaded from disk!
 
 */
 
+static void FS_CheckFilenameIsMutable( const char *filename, const char *function );
+
 // every time a new demo pk3 file is built, this checksum must be updated.
 // the easiest way to get it is to just run the game and see what it spits out
 #define DEMO_PAK0_CHECKSUM   2985661941u
@@ -609,6 +611,10 @@ static void FS_CopyFile( char *fromOSPath, char *toOSPath ) {
 		return;
 	}
 
+#ifndef I_WANT_CVE_2011_3012
+	FS_CheckFilenameIsMutable( toOSPath, __func__ );
+#endif
+
 	f = Sys_FOpen( fromOSPath, "rb" );
 	if ( !f ) {
 		return;
@@ -658,6 +664,10 @@ void FS_CopyFileOS( char *from, char *to ) {
 		return;
 	}
 
+#ifndef I_WANT_CVE_2011_3012
+	FS_CheckFilenameIsMutable( toOSPath, __func__ );
+#endif
+
 	f = Sys_FOpen( fromOSPath, "rb" );
 	if ( !f ) {
 		return;
